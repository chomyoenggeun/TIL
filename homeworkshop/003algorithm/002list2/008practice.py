# 부분집합2

# 1<< n: 2^n 즉, 원소가 n개일 경우
# i & (1<<j): 1 i에서 j번째 비트가 1인지 아닌지를 리턴함
arr = [3, 6, 7, 1, 5, 4]

n = len(arr)

for i in range(1<<n): # 1<<n: 부분집합의 갯수
    for j in range(n):  # 원소의 수만큼 비트를 비교함
        if i & (1<<j): # i의 j번째 비트가 1이면 j번째 원소 출력
            print(arr[j], end = ",")

    print()

# 3,
# 6,
# 3,6,
# 7,
# 3,7,
# 6,7,
# 3,6,7,
# 1,
# 3,1,
# 6,1,
# 3,6,1,
# 7,1,
# 3,7,1,
# 6,7,1,
# 3,6,7,1,
# 5,
# 3,5,
# 6,5,
# 3,6,5,
# 7,5,
# 3,7,5,
# 6,7,5,
# 3,6,7,5,
# 1,5,
# 3,1,5,
# 6,1,5,
# 3,6,1,5,
# 7,1,5,
# 3,7,1,5,
# 6,7,1,5,
# 3,6,7,1,5,
# 4,
# 3,4,
# 6,4,
# 3,6,4,
# 7,4,
# 3,7,4,
# 6,7,4,
# 3,6,7,4,
# 1,4,
# 3,1,4,
# 6,1,4,
# 3,6,1,4,
# 7,1,4,
# 3,7,1,4,
# 6,7,1,4,
# 3,6,7,1,4,
# 5,4,
# 3,5,4,
# 6,5,4,
# 3,6,5,4,
# 7,5,4,
# 3,7,5,4,
# 6,7,5,4,
# 3,6,7,5,4,
# 1,5,4,
# 3,1,5,4,
# 6,1,5,4,
# 3,6,1,5,4,
# 7,1,5,4,
# 3,7,1,5,4,
# 6,7,1,5,4,
# 3,6,7,1,5,4,